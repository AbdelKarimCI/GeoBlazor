@page "/"

<h1>Unit Tests</h1>
<button @onclick="RunTests">Run All Tests</button>
<div class="result-section">
	@foreach (KeyValuePair<string, string> result in _results)
    {
        <p><b>@result.Key - @((MarkupString)result.Value)</b></p>
    }
</div>

<TestSetupTests @ref="_testSetupTests" OnTestResults="OnTestResults" />
<GeometryEngineTests @ref="_geometryEngineTests" OnTestResults="OnTestResults" />
<BaseMapTests @ref="_baseMapTests" OnTestResults="OnTestResults" />
@code {
    private async Task RunTests()
    {
		_results.Clear();
        await _testSetupTests!.RunTests();
        await _geometryEngineTests!.RunTests();
        await _baseMapTests!.RunTests();
    }

	private void OnTestResults(TestResult result)
	{
	    _results[result.ClassName] = 
	        $"<span style=\"color: green;\">Passed: {result.Passed},</span> <span style=\"color: red;\">Failed: {result.Failed}</span>";
	    StateHasChanged();
	}

    private TestSetupTests? _testSetupTests;
    private GeometryEngineTests? _geometryEngineTests;
    private BaseMapTests? _baseMapTests;
	private readonly Dictionary<string, string> _results = new();
}
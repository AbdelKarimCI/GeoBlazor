@page "/routing"
<PageTitle>Routing</PageTitle>
<h1>Routing</h1>

<div class="links-div">
    <a class="btn btn-secondary" target="_blank" href="https://developers.arcgis.com/javascript/latest/find-a-route-and-directions/">ArcGIS API for JavaScript Reference</a>
    <a class="btn btn-primary" target="_blank" href="https://www.arcgis.com/home/item.html?id=4f2e99ba65e34bb8af49733d9778fb8e">Human Geography Dark BaseMap</a>
</div>
<p class="instructions">
    Click on two points on the map to designate starting point and destination. You will see a popup with
    driving directions!
</p>
<MapView @ref="View" Longitude="-118.24532"
         Latitude="34.05398"
         Zoom="12"
         Class="map-view"
         Style="min-height: 500px;"
         OnClickAsyncHandler="OnClick">
    <Map>
        <Basemap>
            <PortalItem Id="4f2e99ba65e34bb8af49733d9778fb8e" />
        </Basemap>
    </Map>
    <CustomOverlay Position="OverlayPosition.TopRight">
        <ol id="directions-widget" class="esri-widget esri-widget--panel esri-directions__scroller">
            @foreach (Direction direction in _directions)
            {
                <li>@(direction.Text) (@(direction.Length.ToString("F")) miles)</li>
            }
        </ol>
    </CustomOverlay>
</MapView>

<Graphic @ref="OriginGraphic">
    <SimpleMarkerSymbol Color="@(new MapColor("white"))" Size="8" />
</Graphic>
<Graphic @ref="DestinationGraphic">
    <SimpleMarkerSymbol Color="@(new MapColor("black"))" Size="8" />
</Graphic>

<SimpleLineSymbol @ref="RouteSymbol" Color="@(new MapColor(5, 150, 255))" Width="3" />

@code {
    private MapView? View { get; set; }
    private Symbol? RouteSymbol { get; set; }
    private Graphic? OriginGraphic { get; set; }
    private Graphic? DestinationGraphic { get; set; }

    private readonly List<Point> _clickedPoints = new();
    private readonly Graphic?[] _graphics = new Graphic?[2];
    private readonly string _routeUrl = "https://route-api.arcgis.com/arcgis/rest/services/World/Route/NAServer/Route_World";
    private Direction[] _directions = Array.Empty<Direction>();

    private async Task OnClick(Point mapPoint)
    {
        if (!_clickedPoints.Any())
        {
            OriginGraphic!.Geometry = mapPoint;
            _clickedPoints.Add(mapPoint);
            await View!.AddGraphic(OriginGraphic);
            StateHasChanged();
        }
        else if (_clickedPoints.Count == 1)
        {
            DestinationGraphic!.Geometry = mapPoint;
            _clickedPoints.Add(mapPoint);
            await View!.AddGraphic(DestinationGraphic);
            _directions = await View.DrawRouteAndGetDirections(RouteSymbol!, _routeUrl);
            StateHasChanged();
        }
        else
        {
            _clickedPoints.Clear();
            _graphics[0] = null;
            _graphics[1] = null;
            _directions = Array.Empty<Direction>();
            StateHasChanged();
            await View!.ClearGraphics();
        }
    }

}
@page "/projection-tool"
@inject Projection Projection

<h1>Projection</h1>
<h2>Starting Point!</h2>
<div>
    <label>X:
        <input type="number" step="0.01" @bind="_startingX" />
    </label>
    <label>Y:
        <input type="number" step="0.01" @bind="_startingY" />
    </label>
</div>
<div>
    <label>
        Starting Spatial Reference Wkid:
        <input type="number" @bind="_inWkid" />
    </label>
    <label>
        Convert to Wkid:
        <input type="number" @bind="_outWkid" />
    </label>
</div>

@if (_results is not null)
{
    <h3>Results</h3>
    foreach (var geometry in _results)
    {
        switch (geometry.Type)
        {
            case "point":
                Point pt = (Point)geometry;
                <div>
                    Lat: @pt.Latitude / Long: @pt.Longitude
                </div>
                <div>
                    X: @pt.X / Y: @pt.Y
                </div>
                break;    
        }
    }
}
@if (_reverseResults is not null)
{
    <h3>Reverse Conversion</h3>
    foreach (var geometry in _reverseResults)
    {
        switch (geometry.Type)
        {
            case "point":
                Point pt = (Point)geometry;
                <div>
                    Lat: @pt.Latitude / Long: @pt.Longitude
                </div>
                <div>
                    X: @pt.X / Y: @pt.Y
                </div>
                break;    
        }
    }
}
<div>
    <button @onclick="@(() => StateHasChanged())">Refresh</button>
</div>
<h3>Wkid: @_inWkid</h3>
<MapView @ref="_view1" Longitude="14.6668" Latitude="-23.5011" Zoom="3" Class="map-view">
    @* <SpatialReference @ref="_inSpatialReference" Wkid="_inWkid"></SpatialReference> *@
    <Map>
        <Basemap>
            <PortalItem Id="0e6994a564e94b7a8986941ce3388223" />
        </Basemap>
        <GraphicsLayer>
            <Graphic>
                <Point @ref="_point1" X="_startingX" Y="_startingY">
                    <SpatialReference @ref="_inSpatialReference" Wkid="_inWkid" />
                </Point>
                <SimpleMarkerSymbol Color="@(new MapColor(81, 46, 132))" />
            </Graphic>
        </GraphicsLayer>
    </Map>
</MapView>
<h3>Wkid: @_outWkid</h3>
<MapView @ref="_view2" Longitude="14.6668" Latitude="-23.5011" Zoom="3" Class="map-view">
    @* <SpatialReference @ref="_outSpatialReference" Wkid="_outWkid" /> *@
    <Map>
        <Basemap>
            <PortalItem Id="52bdc7ab7fb044d98add148764eaa30a" />
        </Basemap>
        <GraphicsLayer>
            @if (_resultsPoint is not null)
            {
                <Graphic>
                    <Point Longitude="_resultsPoint.Longitude" Latitude="_resultsPoint.Latitude" />
                    <SimpleMarkerSymbol Color="@(new MapColor(202, 233, 251))" />
                </Graphic>
            }
        </GraphicsLayer>
    </Map>
</MapView>

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        _results = await Projection.Project(new Geometry[] { _point1! }, _outSpatialReference!);
        _reverseResults = await Projection.Project(_results!, _inSpatialReference!);
        if (firstRender)
        {
            _view1!.Refresh();
            _view2!.Refresh();
        }
    }

    private MapView? _view1;
    private MapView? _view2;
    private Point? _point1;
    private SpatialReference? _inSpatialReference;
    private SpatialReference? _outSpatialReference;
    private Geometry[]? _results;
    private Geometry[]? _reverseResults;
    private double? _startingLat;
    private double? _startingLong;
    private double? _startingX = -116;
    private double? _startingY = 11;
    private double? _inWkid = 102100;
    private double? _outWkid = 4326;
    private Point? _resultsPoint => _results?.FirstOrDefault() as Point;
}
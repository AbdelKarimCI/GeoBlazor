@page "/feature-layers"
<PageTitle>FeatureLayer</PageTitle>

<h1>Events</h1>

<button class="btn btn-primary" @onclick="AddGraphics">Graphic 1</button>
<button class="btn btn-primary" @onclick="AddSecondGraphic">Graphic 2</button>
<MapView @ref="_view" Longitude="_longitude" Latitude="_latitude" Zoom="11" Style="height: 400px; width: 100%;" > 
    <WebMap>
        <PortalItem Id="fae788aa91e54244b161b59725dcbb2a" />
        <GraphicsLayer @ref="_graphicLayer1" Title="Graphic 1"></GraphicsLayer>
    </WebMap>
    <ScaleBarWidget Position="OverlayPosition.BottomLeft" />
    <LayerListWidget Position="OverlayPosition.TopRight" />
</MapView>

@code {
    private readonly double _latitude = 34.027;
    private readonly double _longitude = -118.805;
    private MapView? _view;
    private GraphicsLayer? _graphicLayer1;

    private async Task ActionNo2CallbackFunction()
    {

        Console.WriteLine("Action2");
        await Task.CompletedTask;
    }

    private async Task AddGraphics()
    {
        var firstGraphic = new Graphic(new Point(-118.805, 34.027), new SimpleMarkerSymbol(null, new MapColor("red"), 8), new PopupTemplate("Graphic #1", overwriteActions: false, actions: new List<ActionBase>()
        {
            new ActionButton("Action no.1", id: $"graphic-1-1", callbackFunction: ActionNo2CallbackFunction)
        }));
        await _graphicLayer1!.Add(firstGraphic);
    }

    private async Task AddSecondGraphic()
    {
        var graphics = new List<Graphic>();
        foreach (var num in Enumerable.Range(1, 2))
        {
            var num1 = (double)num / (double)2;
            graphics.Add(new Graphic(new Point(-118.80500 + num1, 34.037), new SimpleMarkerSymbol(null, new MapColor("blue"), 8), new PopupTemplate($"Graphic #2-{num}", overwriteActions:false, actions: new List<ActionBase>()
            {
                new ActionButton("Action no.2", id: $"graphic-2-{num}", callbackFunction: ActionNo2CallbackFunction)
            })));

        }
        var secondGraphicLayer = new GraphicsLayer(graphics, "Second Graphic Layer");
        await _view!.AddLayer(secondGraphicLayer);
    }
}
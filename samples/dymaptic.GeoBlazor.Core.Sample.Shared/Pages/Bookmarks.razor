@page "/Bookmarks"
@using dymaptic.GeoBlazor.Core.Components.Widgets;

<PageTitle>Bookmarks and Bookmarks Widget</PageTitle>
<h1>Bookmarks Widget</h1>
<link rel="stylesheet" href="https://js.arcgis.com/4.27/esri/themes/dark/main.css" />
<style>
    html,
    body,
    #viewDiv {
        padding: 0;
        margin: 0;
        height: 100%;
        width: 100%;
    }

    #timeSliderDiv {
        width: 300px;
    }
</style>

<div class="links-div">
    <a class="btn btn-secondary" target="_blank" href="https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Bookmarks.html">ArcGIS API for JavaScript Reference</a>
    <a class="btn btn-primary" target="_blank" href="https://www.arcgis.com/home/item.html?id=70b726074af04a7e9839d8a07f64c039">Bookmarks widget</a>
</div>

<p class="instructions">
    Sample demonstrates the use of the Bookmarks widget and Bookmark actions.
    This follows the ESRI eample, but the Timeline Widget is included with GeoBlazor pro.
</p>
<MapView @ref="MapView" OnClick="OnMapClick" Class="map-view" OnLayerViewCreate="OnLayerViewCreate">
    <WebMap>
        <PortalItem Id="70b726074af04a7e9839d8a07f64c039" />
    </WebMap>
    <ExpandWidget Expanded="true" Position="OverlayPosition.TopRight">
        <BookmarksWidget OnClick="OnBookmarkClick" EditingEnabled="true">
        </BookmarksWidget>
    </ExpandWidget>

</MapView>

@code {
    private MapView? MapView { get; set; }

    private FeatureLayerView? _layerView { get; set; }

    private void OnLayerViewCreate(LayerViewCreateEvent evt)
    {
        _layerView = evt.LayerView as FeatureLayerView;
    }

    private async void OnMapClick()
    {
        var bookmarks = await ((WebMap)MapView?.Map).GetBookmarks();
    }

    private void OnBookmarkClick(BookmarkSelectEvent eventArgs)
    {
        var layer = MapView!.Map!.Layers.FirstOrDefault();
        if (_layerView is null) return;

        var hurricaneName = eventArgs.Bookmark.Name;

        var featureEffect = new FeatureEffect
            {
                Filter = new FeatureFilter()
                {
                    Where = "Name = '" + hurricaneName.ToUpper() + "'"
                },
                ExcludedEffect = new() { new Effect() { Value = "grayscale(100%) opacity(30%)" } }
            };
        _ = _layerView.SetFeatureEffect(featureEffect);
    }

}
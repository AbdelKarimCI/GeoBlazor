# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Main Branch Release Build

on:
  push:
    branches: [ "main" ]

jobs:
  build: 
    runs-on: ubuntu-latest
    steps:
        # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore ./src/dymaptic.GeoBlazor.Core/dymaptic.GeoBlazor.Core.csproj
    - name: Copy Assets
      shell: pwsh
      run: |
        ./src/dymaptic.GeoBlazor.Core/assetCopy.ps1
    - name: Build Core
      run: dotnet build ./src/dymaptic.GeoBlazor.Core/dymaptic.GeoBlazor.Core.csproj --no-restore /p:OptOutFromCoreEsBuild=false /p:GenerateDocs=false /p:UpdateTemplates=false -c Release
    - name: Build Templates
      run: dotnet build ./templates/dymaptic.GeoBlazor.Templates.csproj -c Release
    - name: Install xmllint
      shell: bash
      run: |
        sudo apt update
        sudo apt install -y libxml2-utils
    - name: Copy Build Versions
      run: |
        CORE_VERSION=$(xmllint --xpath "//PropertyGroup/CoreVersion/text()" ./Directory.Build.props)
        echo "CORE_VERSION=$CORE_VERSION" >> $GITHUB_ENV
    - name: Copy PR Release Notes
      run: |
        PR_DESCRIPTION=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        "https://api.github.com/repos/${{ github.repository }}/pulls?state=closed&sort=updated&direction=desc" | \
        jq -r '.[0].body')
        DESC_PLUS_EOF="${PR_DESCRIPTION}EOF"
        echo "PR_DESCRIPTION<<EOF" >> $GITHUB_ENV
        echo "$DESC_PLUS_EOF" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        body: ${{env.PR_DESCRIPTION}}
        tag_name: "v${{env.PRO_VERSION}}"
        generate_release_notes: true
        prerelease: true
        files: |
          ./src/dymaptic.GeoBlazor.Core/bin/Release/dymaptic.GeoBlazor.Core.*.nupkg
    - name: Upload nuget artifact
      uses: actions/upload-artifact@v3
      with:
        name: .core-nuget
        path: ./src/dymaptic.GeoBlazor.Core/bin/Release/dymaptic.GeoBlazor.Core.*.nupkg
    - name: Upload templates artifact
      uses: actions/upload-artifact@v3
      with:
        name: .templates-nuget
        path: ./templates/bin/Release/dymaptic.GeoBlazor.Templates.*.nupkg
  nuget-push:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: .core-nuget          
    - name: Publish Core to Nuget
      run: dotnet nuget push . --api-key ${{secrets.NUGET_API_KEY}} --source https://api.nuget.org/v3/index.json --skip-duplicate
  templates-nuget-push:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: .templates-nuget
    - name: Publish Templates to Nuget
      run: dotnet nuget push . --api-key ${{secrets.NUGET_API_KEY}} --source https://api.nuget.org/v3/index.json --skip-duplicate